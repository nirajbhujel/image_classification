task: 'classification' # ['classification', 'detection', 'clustering']
num_classes: 2

net:
    type: 'CNN' # ['MLP', 'CNN', 'PointCNN']
    hidden_dim: 512
    out_dim: 512

# loss 
loss:
    bce_loss:
        weight: 1.0
        learn_weight: False
    mse_loss:
        weight: 0.0
        learn_weight: False

# Optimizer
optim:
    lr: 0.0003
    lr_min: 0.000001
    lr_scheduler: 'reduceonplateau'
    warmup_epochs: 0
    lr_patience: 10
    lr_reduce_factor: 0.9
    lr_adjust: False
    lr_adjust_rule: ''
    weight_decay: 0
    weight_decay_end: 1.0
    clip_grad: 1.0
    
# data
data:
    img_height: 480
    img_width: 480
    n_channels: 1
    
    # augmentation
    aug_photo: 0.5
    aug_geome: 0.5

    # data dir
    data_dir: "../data/near_field"
    # dsets: ['Grating', 'Laseroptik', 'Thales']
    
    train_datasets: [] # set in train.py
    test_datasets: [] # set in train.py
    
    # train/val split
    val_split: 0.2

    # class balance
    balance_class: True
    class_weights: [0.2185, 0.7815] # weight for class 0 and 1
    
    # prefetch images -> reduce training time
    prefetch: False
    
# dataloader
train:
    epochs: 500
    batch_size: 64
    num_workers: 1
    
    gpu: 0
    ddp: False
    dist_run: False
    
    resume_training: False
    single_batch: False
    debug: False

    early_stop_metric: 'val/acc' 
    early_stop_patience: 5

    eval_interval: 10
    log_interval: 100
    n_images: 20
    
    eval_metric: 'test/acc'
    
    train_skip_frames: 1
    test_skip_frames: 1

    reset_head_steps: ~
    network_in: ~

# experiments
exp:
    name: 'exp1'
    session: 2
    log_dir: '../logs'
    ckpt_dir: ~
    summary_dir: ~
    seed: 3061994

hydra:  
  output_subdir: "../hydra_log/"  
  run:  
    dir: .